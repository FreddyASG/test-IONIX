//
//  AuthorizationCarouselModels.swift
//  Reddit Chile Memes
//
//  Created by Freddy Silva on 15/5/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum AuthorizationCarousel {
    
    enum Item: CaseIterable {
        case camera
        case notifications
        case location
        
        var image: String {
            switch self {
            case .camera:
                return "camera-carousel-image"
            case .notifications:
                return "notifications-carousel-image"
            case .location:
                return "location-carousel-image"
            }
        }
        
        var title: String {
            switch self {
            case .camera:
                return "com.AuthorizationCarousel.camera.title".localized()
            case .notifications:
                return "com.AuthorizationCarousel.notifications.title".localized()
            case .location:
                return "com.AuthorizationCarousel.location.title".localized()
            }
        }
        
        var subtitle: String {
            switch self {
            case .camera:
                return "com.AuthorizationCarousel.camera.subtitle".localized()
            case .notifications:
                return "com.AuthorizationCarousel.notifications.subtitle".localized()
            case .location:
                return "com.AuthorizationCarousel.location.subtitle".localized()
            }
        }
        
        var titleButton: String {
            switch self {
            case .camera:
                return "com.AuthorizationCarousel.button.title.allow".localized()
            case .notifications:
                return "com.AuthorizationCarousel.button.title.enable".localized()
            case .location:
                return "com.AuthorizationCarousel.button.title.enable".localized()
            }
        }
    }

    // MARK: Use cases
    enum InitialData {
        struct Request {
        }
        struct Response {
            let items: [Item]
        }
        struct ViewModel {
            let items: [Item]
        }
    }
}
